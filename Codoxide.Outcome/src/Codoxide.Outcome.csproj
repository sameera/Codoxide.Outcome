<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <ProjectGuid>7ca48d06-2f3d-4f1d-a644-be789ce16b77</ProjectGuid>
    <Authors>Sameera Perera</Authors>
    <Product>Outcome&lt;T&gt;</Product>
    <Version>6.2.0</Version>
    <PackageId>Codoxide.Outcome</PackageId>
    <AssemblyName>Codoxide.Outcome</AssemblyName>
    <RepositoryUrl>https://github.com/sameera/Codoxide.Outcome</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>either monad, c#, chaining, result, functional, try</PackageTags>
    <Description>"Either" Monad-like Implementation for dealing with operation results in C#</Description>
    <Copyright>Sameera Perera</Copyright>
    <PackageProjectUrl>https://github.com/sameera/Codoxide.Outcome</PackageProjectUrl>
    <PackageReleaseNotes>
        Removes the all encompassing `Then` and introduces `Map` and `Tap`.
    </PackageReleaseNotes>
    <RootNamespace>Codoxide</RootNamespace>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <Company>Codoxide</Company>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.6.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Codoxide.Outcome.Core\src\Codoxide.Outcome.Core.csproj" />
    <ProjectReference Include="..\..\Codoxide.Outcome.Extensions.Catch\src\Codoxide.Outcome.Extensions.Catch.csproj" />
    <ProjectReference Include="..\..\Codoxide.Outcome.Extensions.Filters\src\Codoxide.Outcome.Extensions.Filters.csproj" />
    <ProjectReference Include="..\..\Codoxide.Outcome.Extensions.Map\src\Codoxide.Outcome.Extensions.Map.csproj" />
    <ProjectReference Include="..\..\Codoxide.Outcome.Extensions.Tap\src\Codoxide.Outcome.Extensions.Tap.csproj" />
  </ItemGroup>

</Project>
