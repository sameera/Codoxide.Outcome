<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
      <TargetFramework>netstandard2.0</TargetFramework>
      <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
      <ProjectGuid>{971024A9-B944-4E5B-83B4-3C5D35939774}</ProjectGuid>
      <Authors>Sameera Perera</Authors>
      <Product>Outcome&lt;T&gt;</Product>
      <Version>6.0.0</Version>
      <PackageId>Codoxide.Outcome</PackageId>
      <AssemblyName>Codoxide.Outcome</AssemblyName>
      <RepositoryUrl>https://github.com/sameera/Codoxide.Outcome</RepositoryUrl>
      <RepositoryType>Git</RepositoryType>
      <PackageTags>either monad, c#, chaining, result, functional, try</PackageTags>
      <Description>"Either" Monad-like Implementation for dealing with operation results in C#</Description>
      <Copyright>Sameera Perera</Copyright>
      <PackageProjectUrl>https://github.com/sameera/Codoxide.Outcome</PackageProjectUrl>
      <PackageReleaseNotes>
          4.0. 0 (Has breaking changes)
          - ThenIf is now just Then (with predicates) and allows for both true and false handlers.
          - Allow Catch to return different outcomes.
          - Can specify failure code when failing.
          - Continue(..)
          - Allow Catch to return a differently typed outcome

          4.1.0
          ThenForEach(..) Extension method for processing Outcomes that are composed of multiple results

          4.2.0
          Fixed a bug in the catch handlers (A catch handler will force an outcome to fail)

          4.3.0
          Outcome.Any()

          4.3.x
          - Conditionals support async actions
          - Removed Ambiguous Catch handlers
          - Task&lt;Outcome&lt;T&gt;&gt; unwrapping improvements
          - ThenForEach(..) for async operations.

          4.3.8 - When/Otherwise non-async fn

          5.0.0 [Has breaking changes]
          - Outcome types have been moved to Codoxide.Outcome.Core
          - ThenTry has been removed. All `Then` variants will behave as their ThenTry counterparts
          - All non essential extension methods have been moved to their own nuget packagges.

          5.0.6
          - Built with Codoxide.Outcome.Extensions.Then 5.0.6 - Exception-safe catch blocks

          5.1.0
          - Built with Codoxide.Outcome.Core 5.1.0 - Reduce wrapping and implicit casting/recasting.
          
          6.0.0
          - Void was renamed to Nop to avoid collisions with System.Void
          - Catch, Fail, Map, Tap, TapFailure methods (
          - The multipurpose "Then" is no longer the preferred way of chaining. Use the new, "single purpose" methods instead.
          - Codoxide.Outcome will be compiled as a single binary with the new CFMTaTF and not a meta libarary.
      </PackageReleaseNotes>
      <RootNamespace>Codoxide</RootNamespace>
      <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
      <Company>Codoxide</Company>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Catch\src\Catch.extensions.cs">
      <Link>Catch.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Map\src\Fail.extensions.cs">
      <Link>Fail.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Map\src\Map.extensions.cs">
      <Link>Map.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Map\src\MapAsync.extensions.cs">
      <Link>MapAsync.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Map\src\MapAsync.Task.extensions.cs">
      <Link>MapAsync.Task.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Tap\src\Tap.extensions.cs">
      <Link>Tap.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Tap\src\TapAsync.extensions.cs">
      <Link>TapAsync.extensions.cs</Link>
    </Compile>
    <Compile Include="..\..\Codoxide.Outcome.Extensions.Tap\src\TapFailure.extensions.cs">
      <Link>TapFailure.extensions.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Codoxide.Outcome.Core\src\Codoxide.Outcome.Core.csproj" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="" />
  </Target>

</Project>
