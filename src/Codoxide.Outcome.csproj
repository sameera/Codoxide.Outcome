<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>Sameera Perera</Authors>
    <Product>Outcome&lt;T&gt;</Product>
    <AssemblyVersion>3.1.1.0</AssemblyVersion>
    <FileVersion>3.1.1.0</FileVersion>
    <Version>3.1.1</Version>
    <PackageId>Codoxide.Outcome</PackageId>
    <AssemblyName>Codoxide.Outcome</AssemblyName>
    <RepositoryUrl>https://github.com/sameera/Codoxide.Outcome</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>either monad, c#, chaining, result, functional</PackageTags>
    <Description>"Either" Monad-like Implementation for dealing with operation results in C#</Description>
    <Copyright>Sameera Perera</Copyright>
    <PackageLicenseUrl>https://github.com/sameera/Codoxide.Outcome/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/sameera/Codoxide.Outcome</PackageProjectUrl>
    <PackageReleaseNotes>[3.0.0] Outcome&lt;T&gt; is now an immutable value type. Chain them as much as you need without the GC pressure.
[3.1.1] Added Catch support for Task&lt;Outcome&lt;T&gt;&gt;</PackageReleaseNotes>
    <RootNamespace>Codoxide</RootNamespace>
  </PropertyGroup>

</Project>
