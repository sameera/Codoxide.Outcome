<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <RootNamespace>Codoxide</RootNamespace>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/sameera/Codoxide.Outcome</PackageProjectUrl>
    <Description>
        Codoxide.Outcome&lt;T&gt; is an Either monad (or Result monad) for .NET Core.It allows for elegant happy path and error path handling through method chaining made available through a number of Extension libraries.</Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Copyright>Sameera Perera</Copyright>
    <RepositoryUrl>https://github.com/sameera/Codoxide.Outcome</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>either monad, c#, chaining, result, functional, try</PackageTags>
    <Version>6.2.0</Version>
    <Authors>Sameera Perera</Authors>
    <Company>Codoxide</Company>

      <PackageReleaseNotes>
          Parameterless Otherwise method.
          Async When with Predicates.
          When, Otherwise for boolean Outcomes.
      </PackageReleaseNotes>
    <RootNamespace>Codoxide</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.6">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Codoxide.Outcome.Core\src\Codoxide.Outcome.Core.csproj" />
  </ItemGroup>

</Project>
