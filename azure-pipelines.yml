steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Build.DefinitionName)/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Build.DefinitionName)/**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Build.DefinitionName)/*[Tt]ests/*.csproj'
    arguments: '--configuration Release'

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    feedsToUse: config
    externalFeedCredentials: 'NuGet.org PAT'
    packagesToPush: '$(Build.SourcesDirectory)/$(Build.DefinitionName)/**/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'NuGet.org PAT'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'GitHub PAT'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.DefinitionName)-$(Build.BuildId)'
    tagSource: 'gitTag'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))